{
  "address": "0x1b7509bf525c801059684fb8c0039830978b9ed5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tknftMarketplace",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tkDevsNFT",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "CreateProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ExecuteProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Vote",
          "name": "vote",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "VoteOnProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawEther",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftTokenId",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yesVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "noVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        },
        {
          "internalType": "enum Vote",
          "name": "vote",
          "type": "uint8"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0a06e141a9b09ce8b94cabd21291660fd9eaa3db4644e58d214179392358d99b",
  "receipt": {
    "to": null,
    "from": "0xcbc477a6483e89b0267e1837ff233b87d5943988",
    "contractAddress": "0x1b7509bf525c801059684fb8c0039830978b9ed5",
    "transactionIndex": "0x10",
    "gasUsed": "0x1761d5",
    "logsBloom": "0x
    "blockHash": "0x7c16841a3c57cd7c93ba697ea8227726026dfa2f644bcb7c3241c67dcea19f46",
    "transactionHash": "0x0a06e141a9b09ce8b94cabd21291660fd9eaa3db4644e58d214179392358d99b",
    "logs": [
      {
        "address": "0x1b7509bf525c801059684fb8c0039830978b9ed5",
        "blockHash": "0x7c16841a3c57cd7c93ba697ea8227726026dfa2f644bcb7c3241c67dcea19f46",
        "blockNumber": "0x36807d",
        "data": "0x",
        "logIndex": "0xa",
        "removed": false,
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000cbc477a6483e89b0267e1837ff233b87d5943988"
        ],
        "transactionHash": "0x0a06e141a9b09ce8b94cabd21291660fd9eaa3db4644e58d214179392358d99b",
        "transactionIndex": "0x10"
      }
    ],
    "blockNumber": "0x36807d",
    "cumulativeGasUsed": "0x28e97d",
    "status": "0x1"
  },
  "args": [
    "0x0446d47c96222de201777099be7cf1f25ab3ae14",
    "0x423B866328a0910EE8982347e024546810ABaC7D"
  ],
  "numDeployments": 1,
  "solcInputHash": "4a144e7450bd72c96be310397d17d73c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tknftMarketplace\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tkDevsNFT\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CreateProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ExecuteProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Vote\",\"name\":\"vote\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"VoteOnProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawEther\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftTokenId\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yesVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"noVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum Vote\",\"name\":\"vote\",\"type\":\"uint8\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createProposal(uint256)\":{\"details\":\"createProposal allows a tkDevsNFT holder to create a new proposal in the DAO\",\"params\":{\"_nftTokenId\":\"- the tokenID of the NFT to be purchased from FakeNFTMarketplace if this proposal passes\"},\"returns\":{\"_0\":\"Returns the proposal index for the newly created proposal\"}},\"executeProposal(uint256)\":{\"details\":\"executeProposal allows any CryptoDevsNFT holder to execute a proposal after it's deadline has been exceeded\",\"params\":{\"proposalIndex\":\"- the index of the proposal to execute in the proposals array\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"voteOnProposal(uint256,uint8)\":{\"details\":\"voteOnProposal allows a tkDevsNFT holder to cast their vote on an active proposal\",\"params\":{\"proposalIndex\":\"- the index of the proposal to vote on in the proposals array\",\"vote\":\"- the type of vote they want to cast\"}},\"withdrawEther()\":{\"details\":\"withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/TKDAO.sol\":\"TKDevsDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/core/TKDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./../libraries/HelperTKDAO.sol\\\";\\nimport \\\"../interfaces/IMarketplace.sol\\\";\\nimport \\\"../interfaces/ITKDev.sol\\\";\\nimport \\\"../interfaces/ITKDevDAO.sol\\\";\\n\\n// Replace this line with the Interfaces\\n\\ncontract TKDevsDAO is Ownable, ITKDevDAO {\\n    // We will write contract code here\\n    // Create a mapping of ID to Proposal\\n    mapping(uint256 => Proposal) public proposals;\\n    // Number of proposals that have been created\\n    uint256 public numProposals;\\n    IMarketplace tknftMarketplace;\\n    ITKDev tkDevsNFT;\\n\\n    // Create a modifier which only allows a function to be\\n    // called by someone who owns at least 1 tkDevsNFT\\n    modifier nftHolderOnly() {\\n        require(tkDevsNFT.balanceOf(msg.sender) > 0, \\\"NOT_A_DAO_MEMBER\\\");\\n        _;\\n    }\\n    // Create a modifier which only allows a function to be\\n    // called if the given proposal's deadline has not been exceeded yet\\n    modifier activeProposalOnly(uint256 proposalIndex) {\\n        require(proposals[proposalIndex].deadline > block.timestamp, \\\"DEADLINE_EXCEEDED\\\");\\n        _;\\n    }\\n    // Create a modifier which only allows a function to be\\n    // called if the given proposals' deadline HAS been exceeded\\n    // and if the proposal has not yet been executed\\n    modifier inactiveProposalOnly(uint256 proposalIndex) {\\n        require(proposals[proposalIndex].deadline <= block.timestamp, \\\"DEADLINE_NOT_EXCEEDED\\\");\\n        require(proposals[proposalIndex].executed == false, \\\"PROPOSAL_ALREADY_EXECUTED\\\");\\n        _;\\n    }\\n\\n    // The following two functions allow the contract to accept ETH deposits\\n    // directly from a wallet without calling a function\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    // Create a payable constructor which initializes the contract\\n    // instances for tknftMarketplace and tkDevsNFT\\n    // The payable allows this constructor to accept an ETH deposit when it is being deployed\\n    constructor(address _tknftMarketplace, address _tkDevsNFT) payable {\\n        tknftMarketplace = IMarketplace(_tknftMarketplace);\\n        tkDevsNFT = ITKDev(_tkDevsNFT);\\n    }\\n\\n    /// @dev createProposal allows a tkDevsNFT holder to create a new proposal in the DAO\\n    /// @param _nftTokenId - the tokenID of the NFT to be purchased from FakeNFTMarketplace if this proposal passes\\n    /// @return Returns the proposal index for the newly created proposal\\n    function createProposal(uint256 _nftTokenId) external nftHolderOnly returns (uint256) {\\n        require(tknftMarketplace.available(_nftTokenId), \\\"NFT_NOT_FOR_SALE\\\");\\n        Proposal storage proposal = proposals[numProposals];\\n        proposal.nftTokenId = _nftTokenId;\\n        // Set the proposal's voting deadline to be (current time + 5 minutes)\\n        proposal.deadline = block.timestamp + 5 minutes;\\n        emit CreateProposal(msg.sender, numProposals, _nftTokenId);\\n\\n        numProposals++;\\n\\n        return numProposals;\\n    }\\n\\n    /// @dev voteOnProposal allows a tkDevsNFT holder to cast their vote on an active proposal\\n    /// @param proposalIndex - the index of the proposal to vote on in the proposals array\\n    /// @param vote - the type of vote they want to cast\\n    function voteOnProposal(\\n        uint256 proposalIndex,\\n        Vote vote\\n    ) external nftHolderOnly activeProposalOnly(proposalIndex) {\\n        Proposal storage proposal = proposals[proposalIndex];\\n\\n        uint256 voterNFTBalance = tkDevsNFT.balanceOf(msg.sender);\\n        uint256 numVotes = 0;\\n\\n        // Calculate how many NFTs are owned by the voter\\n        // that haven't already been used for voting on this proposal\\n        for (uint256 i = 0; i < voterNFTBalance; i++) {\\n            uint256 tokenId = tkDevsNFT.tokenOfOwnerByIndex(msg.sender, i);\\n            if (proposal.voters[tokenId] == false) {\\n                numVotes++;\\n                proposal.voters[tokenId] = true;\\n            }\\n        }\\n        require(numVotes > 0, \\\"ALREADY_VOTED\\\");\\n\\n        if (vote == Vote.YES) {\\n            proposal.yesVotes += numVotes;\\n        } else {\\n            proposal.noVotes += numVotes;\\n        }\\n        emit VoteOnProposal(msg.sender, vote, proposalIndex);\\n    }\\n\\n    /// @dev executeProposal allows any CryptoDevsNFT holder to execute a proposal after it's deadline has been exceeded\\n    /// @param proposalIndex - the index of the proposal to execute in the proposals array\\n    function executeProposal(\\n        uint256 proposalIndex\\n    ) external nftHolderOnly inactiveProposalOnly(proposalIndex) {\\n        Proposal storage proposal = proposals[proposalIndex];\\n\\n        // If the proposal has more YAY votes than NAY votes\\n        // purchase the NFT from the FakeNFTMarketplace\\n        if (proposal.yesVotes > proposal.noVotes) {\\n            uint256 nftPrice = tknftMarketplace.getPrice();\\n            require(address(this).balance >= nftPrice, \\\"NOT_ENOUGH_FUNDS\\\");\\n            tknftMarketplace.purchase{value: nftPrice}(proposal.nftTokenId);\\n        }\\n        proposal.executed = true;\\n        emit ExecuteProposal(msg.sender, true, proposalIndex);\\n    }\\n\\n    /// @dev withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract\\n    function withdrawEther() external onlyOwner {\\n        uint256 amount = address(this).balance;\\n        require(amount > 0, \\\"Nothing to withdraw, contract balance empty\\\");\\n        (bool sent, ) = payable(owner()).call{value: amount}(\\\"\\\");\\n        require(sent, \\\"FAILED_TO_WITHDRAW_ETHER\\\");\\n        emit WithdrawEther(amount);\\n    }\\n}\\n\",\"keccak256\":\"0xf235239a705579eee656b4f9255f1f15ce8986626a7ca54096656d5e179ec9e1\",\"license\":\"MIT\"},\"contracts/interfaces/IMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\ninterface IMarketplace {\\n    //Events\\n    event Purchase(address indexed userAddress, uint256 indexed tokenId);\\n\\n    function getPrice() external returns (uint256);\\n\\n    function purchase(uint256) external payable;\\n\\n    function available(uint256) external returns (bool);\\n}\\n\",\"keccak256\":\"0x3c22d93411aa98d3045a14ce1cab4ad2dacb87ce1181ef643c6831c05a307bda\",\"license\":\"MIT\"},\"contracts/interfaces/ITKDev.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\ninterface ITKDev {\\n    //Events\\n    event StartPresale(uint256 indexed presaleEnded);\\n    event PresaleMint(address indexed userAddress, uint256 indexed tokenId);\\n    event Mint(address indexed userAddress, uint256 indexed tokenId);\\n    event SetPaused();\\n    event Withdraw(uint256 indexed amount);\\n\\n    function startPresale() external;\\n\\n    function presaleMint() external payable;\\n\\n    function mint() external payable;\\n\\n    function setPaused(bool) external;\\n\\n    function withdraw() external;\\n\\n    function tokenOfOwnerByIndex(\\n        address owner,\\n        uint256 index\\n    ) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n}\\n\",\"keccak256\":\"0xd7aaa2843e23933a911e5eb164221e9075ee67c46c7e32f999520590719e7e9c\",\"license\":\"MIT\"},\"contracts/interfaces/ITKDevDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\nimport \\\"./../libraries/HelperTKDAO.sol\\\";\\n\\ninterface ITKDevDAO {\\n    //Events\\n    event CreateProposal(address indexed creator, uint256 indexed proposalId, uint256 tokenId);\\n    event VoteOnProposal(address indexed voter, Vote vote, uint256 indexed proposalId);\\n    event ExecuteProposal(address indexed executor, bool executed, uint256 indexed proposalId);\\n    event WithdrawEther(uint256 indexed amount);\\n\\n    function executeProposal(uint256) external;\\n\\n    function createProposal(uint256) external returns (uint256);\\n\\n    function voteOnProposal(uint256, Vote) external;\\n\\n    function withdrawEther() external;\\n}\\n\",\"keccak256\":\"0x3cf790d258403a3c9f821b21870b11f7904e68e8723dbdb20e912a77576770b8\",\"license\":\"MIT\"},\"contracts/libraries/HelperTKDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\n// Create a struct named Proposal containing all relevant information\\nstruct Proposal {\\n    // nftTokenId - the tokenID of the NFT to purchase from FakeNFTMarketplace if the proposal passes\\n    uint256 nftTokenId;\\n    // deadline - the UNIX timestamp until which this proposal is active. Proposal can be executed after the deadline has been exceeded.\\n    uint256 deadline;\\n    // yesVotes - number of yes votes for this proposal\\n    uint256 yesVotes;\\n    // noVotes - number of no votes for this proposal\\n    uint256 noVotes;\\n    // executed - whether or not this proposal has been executed yet. Cannot be executed before the deadline has been exceeded.\\n    bool executed;\\n    // voters - a mapping of CryptoDevsNFT tokenIDs to booleans indicating whether that NFT has already been used to cast a vote or not\\n    mapping(uint256 => bool) voters;\\n}\\n\\n// Create an enum named Vote containing possible options for a vote\\nenum Vote {\\n    YES, // YES = 0\\n    NO // NO = 1\\n}\\n\",\"keccak256\":\"0xfa98a75d24d2f5a4bfcb4c25ef888d45b834896e1ea63b9367aaa06f0650863f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260405162001bd938038062001bd9833981810160405281019062000029919062000209565b620000496200003d620000d360201b60201c565b620000db60201b60201c565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000250565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d182620001a4565b9050919050565b620001e381620001c4565b8114620001ef57600080fd5b50565b6000815190506200020381620001d8565b92915050565b600080604083850312156200022357620002226200019f565b5b60006200023385828601620001f2565b92505060206200024685828601620001f2565b9150509250929050565b61197980620002606000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190611001565b610210565b6040516100cb959493929190611058565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190611001565b610253565b005b34801561010957600080fd5b506101126105fc565b60405161011f91906110ab565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190611001565b610602565b60405161015c91906110ab565b60405180910390f35b34801561017157600080fd5b5061017a61086a565b005b34801561018857600080fd5b5061019161087e565b005b34801561019f57600080fd5b506101a86109b2565b6040516101b59190611107565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611147565b6109db565b005b3480156101f357600080fd5b5061020e600480360381019061020991906111b3565b610df9565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102b09190611107565b602060405180830381865afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f191906111f5565b11610331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103289061127f565b60405180910390fd5b80426001600083815260200190815260200160002060010154111561038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610382906112eb565b60405180910390fd5b600015156001600083815260200190815260200160002060040160009054906101000a900460ff161515146103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90611357565b60405180910390fd5b600060016000848152602001908152602001600020905080600301548160020154111561058a576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b191906111f5565b9050804710156104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906113c3565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b815260040161055691906110ab565b6000604051808303818588803b15801561056f57600080fd5b505af1158015610583573d6000803e3d6000fd5b5050505050505b60018160040160006101000a81548160ff021916908315150217905550823373ffffffffffffffffffffffffffffffffffffffff167f8a4f4009738837e2d0b8517ee8648aad7da946447472548acf5e46f4662b3cf160016040516105ef91906113e3565b60405180910390a3505050565b60025481565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106609190611107565b602060405180830381865afa15801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a191906111f5565b116106e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d89061127f565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b815260040161073c91906110ab565b6020604051808303816000875af115801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f919061142a565b6107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906114a3565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c426107ee91906114f2565b81600101819055506002543373ffffffffffffffffffffffffffffffffffffffff167fbde94383be10c56c713172892b393499a8e31b142f2a5e3faa7c50363e187bf68560405161083f91906110ab565b60405180910390a36002600081548092919061085a90611526565b9190505550600254915050919050565b610872610e7c565b61087c6000610efa565b565b610886610e7c565b6000479050600081116108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c5906115e0565b60405180910390fd5b60006108d86109b2565b73ffffffffffffffffffffffffffffffffffffffff16826040516108fb90611631565b60006040518083038185875af1925050503d8060008114610938576040519150601f19603f3d011682016040523d82523d6000602084013e61093d565b606091505b5050905080610981576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097890611692565b60405180910390fd5b817f384db9fc3726c2d95cfec67f179bab3b5b3151fb5642ccb002fd2e5d3613863b60405160405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a389190611107565b602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7991906111f5565b11610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab09061127f565b60405180910390fd5b8142600160008381526020019081526020016000206001015411610b12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b09906116fe565b60405180910390fd5b60006001600085815260200190815260200160002090506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b869190611107565b602060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906111f5565b90506000805b82811015610cf6576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610c3492919061171e565b602060405180830381865afa158015610c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7591906111f5565b90506000151585600501600083815260200190815260200160002060009054906101000a900460ff16151503610ce2578280610cb090611526565b935050600185600501600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b508080610cee90611526565b915050610bcd565b5060008111610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3190611793565b60405180910390fd5b60006001811115610d4e57610d4d6117b3565b5b856001811115610d6157610d606117b3565b5b03610d865780836002016000828254610d7a91906114f2565b92505081905550610da2565b80836003016000828254610d9a91906114f2565b925050819055505b853373ffffffffffffffffffffffffffffffffffffffff167f38b4259182b4afc42b0f53bf6099807fb8e4ba2c115a17bd4389ee1c9f4e872387604051610de9919061182a565b60405180910390a3505050505050565b610e01610e7c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e67906118b7565b60405180910390fd5b610e7981610efa565b50565b610e84610fbe565b73ffffffffffffffffffffffffffffffffffffffff16610ea26109b2565b73ffffffffffffffffffffffffffffffffffffffff1614610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef90611923565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610fde81610fcb565b8114610fe957600080fd5b50565b600081359050610ffb81610fd5565b92915050565b60006020828403121561101757611016610fc6565b5b600061102584828501610fec565b91505092915050565b61103781610fcb565b82525050565b60008115159050919050565b6110528161103d565b82525050565b600060a08201905061106d600083018861102e565b61107a602083018761102e565b611087604083018661102e565b611094606083018561102e565b6110a16080830184611049565b9695505050505050565b60006020820190506110c0600083018461102e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110f1826110c6565b9050919050565b611101816110e6565b82525050565b600060208201905061111c60008301846110f8565b92915050565b6002811061112f57600080fd5b50565b60008135905061114181611122565b92915050565b6000806040838503121561115e5761115d610fc6565b5b600061116c85828601610fec565b925050602061117d85828601611132565b9150509250929050565b611190816110e6565b811461119b57600080fd5b50565b6000813590506111ad81611187565b92915050565b6000602082840312156111c9576111c8610fc6565b5b60006111d78482850161119e565b91505092915050565b6000815190506111ef81610fd5565b92915050565b60006020828403121561120b5761120a610fc6565b5b6000611219848285016111e0565b91505092915050565b600082825260208201905092915050565b7f4e4f545f415f44414f5f4d454d42455200000000000000000000000000000000600082015250565b6000611269601083611222565b915061127482611233565b602082019050919050565b600060208201905081810360008301526112988161125c565b9050919050565b7f444541444c494e455f4e4f545f45584345454445440000000000000000000000600082015250565b60006112d5601583611222565b91506112e08261129f565b602082019050919050565b60006020820190508181036000830152611304816112c8565b9050919050565b7f50524f504f53414c5f414c52454144595f455845435554454400000000000000600082015250565b6000611341601983611222565b915061134c8261130b565b602082019050919050565b6000602082019050818103600083015261137081611334565b9050919050565b7f4e4f545f454e4f5547485f46554e445300000000000000000000000000000000600082015250565b60006113ad601083611222565b91506113b882611377565b602082019050919050565b600060208201905081810360008301526113dc816113a0565b9050919050565b60006020820190506113f86000830184611049565b92915050565b6114078161103d565b811461141257600080fd5b50565b600081519050611424816113fe565b92915050565b6000602082840312156114405761143f610fc6565b5b600061144e84828501611415565b91505092915050565b7f4e46545f4e4f545f464f525f53414c4500000000000000000000000000000000600082015250565b600061148d601083611222565b915061149882611457565b602082019050919050565b600060208201905081810360008301526114bc81611480565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114fd82610fcb565b915061150883610fcb565b92508282019050808211156115205761151f6114c3565b5b92915050565b600061153182610fcb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611563576115626114c3565b5b600182019050919050565b7f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160008201527f6c616e636520656d707479000000000000000000000000000000000000000000602082015250565b60006115ca602b83611222565b91506115d58261156e565b604082019050919050565b600060208201905081810360008301526115f9816115bd565b9050919050565b600081905092915050565b50565b600061161b600083611600565b91506116268261160b565b600082019050919050565b600061163c8261160e565b9150819050919050565b7f4641494c45445f544f5f57495448445241575f45544845520000000000000000600082015250565b600061167c601883611222565b915061168782611646565b602082019050919050565b600060208201905081810360008301526116ab8161166f565b9050919050565b7f444541444c494e455f4558434545444544000000000000000000000000000000600082015250565b60006116e8601183611222565b91506116f3826116b2565b602082019050919050565b60006020820190508181036000830152611717816116db565b9050919050565b600060408201905061173360008301856110f8565b611740602083018461102e565b9392505050565b7f414c52454144595f564f54454400000000000000000000000000000000000000600082015250565b600061177d600d83611222565b915061178882611747565b602082019050919050565b600060208201905081810360008301526117ac81611770565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106117f3576117f26117b3565b5b50565b6000819050611804826117e2565b919050565b6000611814826117f6565b9050919050565b61182481611809565b82525050565b600060208201905061183f600083018461181b565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118a1602683611222565b91506118ac82611845565b604082019050919050565b600060208201905081810360008301526118d081611894565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061190d602083611222565b9150611918826118d7565b602082019050919050565b6000602082019050818103600083015261193c81611900565b905091905056fea26469706673582212209d23cdcfac17964545fee65b61aaee0ee9a939816fe975317573eb2e2c0a06ac64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190611001565b610210565b6040516100cb959493929190611058565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190611001565b610253565b005b34801561010957600080fd5b506101126105fc565b60405161011f91906110ab565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190611001565b610602565b60405161015c91906110ab565b60405180910390f35b34801561017157600080fd5b5061017a61086a565b005b34801561018857600080fd5b5061019161087e565b005b34801561019f57600080fd5b506101a86109b2565b6040516101b59190611107565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611147565b6109db565b005b3480156101f357600080fd5b5061020e600480360381019061020991906111b3565b610df9565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102b09190611107565b602060405180830381865afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f191906111f5565b11610331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103289061127f565b60405180910390fd5b80426001600083815260200190815260200160002060010154111561038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610382906112eb565b60405180910390fd5b600015156001600083815260200190815260200160002060040160009054906101000a900460ff161515146103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90611357565b60405180910390fd5b600060016000848152602001908152602001600020905080600301548160020154111561058a576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b191906111f5565b9050804710156104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906113c3565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b815260040161055691906110ab565b6000604051808303818588803b15801561056f57600080fd5b505af1158015610583573d6000803e3d6000fd5b5050505050505b60018160040160006101000a81548160ff021916908315150217905550823373ffffffffffffffffffffffffffffffffffffffff167f8a4f4009738837e2d0b8517ee8648aad7da946447472548acf5e46f4662b3cf160016040516105ef91906113e3565b60405180910390a3505050565b60025481565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106609190611107565b602060405180830381865afa15801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a191906111f5565b116106e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d89061127f565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b815260040161073c91906110ab565b6020604051808303816000875af115801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f919061142a565b6107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906114a3565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c426107ee91906114f2565b81600101819055506002543373ffffffffffffffffffffffffffffffffffffffff167fbde94383be10c56c713172892b393499a8e31b142f2a5e3faa7c50363e187bf68560405161083f91906110ab565b60405180910390a36002600081548092919061085a90611526565b9190505550600254915050919050565b610872610e7c565b61087c6000610efa565b565b610886610e7c565b6000479050600081116108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c5906115e0565b60405180910390fd5b60006108d86109b2565b73ffffffffffffffffffffffffffffffffffffffff16826040516108fb90611631565b60006040518083038185875af1925050503d8060008114610938576040519150601f19603f3d011682016040523d82523d6000602084013e61093d565b606091505b5050905080610981576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097890611692565b60405180910390fd5b817f384db9fc3726c2d95cfec67f179bab3b5b3151fb5642ccb002fd2e5d3613863b60405160405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a389190611107565b602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7991906111f5565b11610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab09061127f565b60405180910390fd5b8142600160008381526020019081526020016000206001015411610b12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b09906116fe565b60405180910390fd5b60006001600085815260200190815260200160002090506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b869190611107565b602060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906111f5565b90506000805b82811015610cf6576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610c3492919061171e565b602060405180830381865afa158015610c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7591906111f5565b90506000151585600501600083815260200190815260200160002060009054906101000a900460ff16151503610ce2578280610cb090611526565b935050600185600501600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b508080610cee90611526565b915050610bcd565b5060008111610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3190611793565b60405180910390fd5b60006001811115610d4e57610d4d6117b3565b5b856001811115610d6157610d606117b3565b5b03610d865780836002016000828254610d7a91906114f2565b92505081905550610da2565b80836003016000828254610d9a91906114f2565b925050819055505b853373ffffffffffffffffffffffffffffffffffffffff167f38b4259182b4afc42b0f53bf6099807fb8e4ba2c115a17bd4389ee1c9f4e872387604051610de9919061182a565b60405180910390a3505050505050565b610e01610e7c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e67906118b7565b60405180910390fd5b610e7981610efa565b50565b610e84610fbe565b73ffffffffffffffffffffffffffffffffffffffff16610ea26109b2565b73ffffffffffffffffffffffffffffffffffffffff1614610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef90611923565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610fde81610fcb565b8114610fe957600080fd5b50565b600081359050610ffb81610fd5565b92915050565b60006020828403121561101757611016610fc6565b5b600061102584828501610fec565b91505092915050565b61103781610fcb565b82525050565b60008115159050919050565b6110528161103d565b82525050565b600060a08201905061106d600083018861102e565b61107a602083018761102e565b611087604083018661102e565b611094606083018561102e565b6110a16080830184611049565b9695505050505050565b60006020820190506110c0600083018461102e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110f1826110c6565b9050919050565b611101816110e6565b82525050565b600060208201905061111c60008301846110f8565b92915050565b6002811061112f57600080fd5b50565b60008135905061114181611122565b92915050565b6000806040838503121561115e5761115d610fc6565b5b600061116c85828601610fec565b925050602061117d85828601611132565b9150509250929050565b611190816110e6565b811461119b57600080fd5b50565b6000813590506111ad81611187565b92915050565b6000602082840312156111c9576111c8610fc6565b5b60006111d78482850161119e565b91505092915050565b6000815190506111ef81610fd5565b92915050565b60006020828403121561120b5761120a610fc6565b5b6000611219848285016111e0565b91505092915050565b600082825260208201905092915050565b7f4e4f545f415f44414f5f4d454d42455200000000000000000000000000000000600082015250565b6000611269601083611222565b915061127482611233565b602082019050919050565b600060208201905081810360008301526112988161125c565b9050919050565b7f444541444c494e455f4e4f545f45584345454445440000000000000000000000600082015250565b60006112d5601583611222565b91506112e08261129f565b602082019050919050565b60006020820190508181036000830152611304816112c8565b9050919050565b7f50524f504f53414c5f414c52454144595f455845435554454400000000000000600082015250565b6000611341601983611222565b915061134c8261130b565b602082019050919050565b6000602082019050818103600083015261137081611334565b9050919050565b7f4e4f545f454e4f5547485f46554e445300000000000000000000000000000000600082015250565b60006113ad601083611222565b91506113b882611377565b602082019050919050565b600060208201905081810360008301526113dc816113a0565b9050919050565b60006020820190506113f86000830184611049565b92915050565b6114078161103d565b811461141257600080fd5b50565b600081519050611424816113fe565b92915050565b6000602082840312156114405761143f610fc6565b5b600061144e84828501611415565b91505092915050565b7f4e46545f4e4f545f464f525f53414c4500000000000000000000000000000000600082015250565b600061148d601083611222565b915061149882611457565b602082019050919050565b600060208201905081810360008301526114bc81611480565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114fd82610fcb565b915061150883610fcb565b92508282019050808211156115205761151f6114c3565b5b92915050565b600061153182610fcb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611563576115626114c3565b5b600182019050919050565b7f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160008201527f6c616e636520656d707479000000000000000000000000000000000000000000602082015250565b60006115ca602b83611222565b91506115d58261156e565b604082019050919050565b600060208201905081810360008301526115f9816115bd565b9050919050565b600081905092915050565b50565b600061161b600083611600565b91506116268261160b565b600082019050919050565b600061163c8261160e565b9150819050919050565b7f4641494c45445f544f5f57495448445241575f45544845520000000000000000600082015250565b600061167c601883611222565b915061168782611646565b602082019050919050565b600060208201905081810360008301526116ab8161166f565b9050919050565b7f444541444c494e455f4558434545444544000000000000000000000000000000600082015250565b60006116e8601183611222565b91506116f3826116b2565b602082019050919050565b60006020820190508181036000830152611717816116db565b9050919050565b600060408201905061173360008301856110f8565b611740602083018461102e565b9392505050565b7f414c52454144595f564f54454400000000000000000000000000000000000000600082015250565b600061177d600d83611222565b915061178882611747565b602082019050919050565b600060208201905081810360008301526117ac81611770565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106117f3576117f26117b3565b5b50565b6000819050611804826117e2565b919050565b6000611814826117f6565b9050919050565b61182481611809565b82525050565b600060208201905061183f600083018461181b565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118a1602683611222565b91506118ac82611845565b604082019050919050565b600060208201905081810360008301526118d081611894565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061190d602083611222565b9150611918826118d7565b602082019050919050565b6000602082019050818103600083015261193c81611900565b905091905056fea26469706673582212209d23cdcfac17964545fee65b61aaee0ee9a939816fe975317573eb2e2c0a06ac64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createProposal(uint256)": {
        "details": "createProposal allows a tkDevsNFT holder to create a new proposal in the DAO",
        "params": {
          "_nftTokenId": "- the tokenID of the NFT to be purchased from FakeNFTMarketplace if this proposal passes"
        },
        "returns": {
          "_0": "Returns the proposal index for the newly created proposal"
        }
      },
      "executeProposal(uint256)": {
        "details": "executeProposal allows any CryptoDevsNFT holder to execute a proposal after it's deadline has been exceeded",
        "params": {
          "proposalIndex": "- the index of the proposal to execute in the proposals array"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "voteOnProposal(uint256,uint8)": {
        "details": "voteOnProposal allows a tkDevsNFT holder to cast their vote on an active proposal",
        "params": {
          "proposalIndex": "- the index of the proposal to vote on in the proposals array",
          "vote": "- the type of vote they want to cast"
        }
      },
      "withdrawEther()": {
        "details": "withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 150,
        "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
        "label": "proposals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Proposal)673_storage)"
      },
      {
        "astId": 152,
        "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
        "label": "numProposals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 155,
        "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
        "label": "tknftMarketplace",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IMarketplace)541"
      },
      {
        "astId": 158,
        "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
        "label": "tkDevsNFT",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ITKDev)600"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IMarketplace)541": {
        "encoding": "inplace",
        "label": "contract IMarketplace",
        "numberOfBytes": "20"
      },
      "t_contract(ITKDev)600": {
        "encoding": "inplace",
        "label": "contract ITKDev",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)673_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)673_storage"
      },
      "t_struct(Proposal)673_storage": {
        "encoding": "inplace",
        "label": "struct Proposal",
        "members": [
          {
            "astId": 660,
            "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
            "label": "nftTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 662,
            "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
            "label": "deadline",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 664,
            "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
            "label": "yesVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 666,
            "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
            "label": "noVotes",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 668,
            "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
            "label": "executed",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 672,
            "contract": "contracts/core/TKDAO.sol:TKDevsDAO",
            "label": "voters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
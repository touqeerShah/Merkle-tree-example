/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDocumentSignature,
  IDocumentSignatureInterface,
} from "../../../contracts/interfaces/IDocumentSignature";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "DocumentSignature__CreatorIdentityNotExit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokeId",
        type: "uint256",
      },
    ],
    name: "DocumentSignature__InValidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "DocumentSignature__NotProcessBecauseNotInQueue",
    type: "error",
  },
  {
    inputs: [],
    name: "DocumentSignature__OnlyOwnerCanCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "start",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "end",
        type: "uint64",
      },
    ],
    name: "DocumentSignature__StartingAndEndingValuesNotSome",
    type: "error",
  },
  {
    inputs: [],
    name: "DocumentSignature__UserNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "isValidation",
        type: "bool",
      },
    ],
    name: "DocumentProcess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDocumentSignature.DocumentState",
        name: "status",
        type: "uint8",
      },
    ],
    name: "DocumentProcessWithSignature",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "DocumentedCrearted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
    ],
    name: "checkMyCastedVote",
    outputs: [
      {
        internalType: "enum IDocumentSignature.SignatureStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "description",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "signatureStartingPeriod",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "signatureEndingingPeriod",
        type: "uint64",
      },
      {
        internalType: "uint256[]",
        name: "partiesTokenId",
        type: "uint256[]",
      },
    ],
    name: "createDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
    ],
    name: "getDocumentDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "name",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "description",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "enum IDocumentSignature.SignatureStatus",
                name: "status",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "signatures",
                type: "bytes",
              },
            ],
            internalType: "struct IDocumentSignature.Party[]",
            name: "parties",
            type: "tuple[]",
          },
          {
            internalType: "enum IDocumentSignature.DocumentState",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "signatureStart",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "signatureEnd",
            type: "uint64",
          },
        ],
        internalType: "struct IDocumentSignature.DocumentDetials",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
    ],
    name: "getDocumentEndingingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
    ],
    name: "getDocumentStartingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        internalType: "enum IDocumentSignature.DocumentState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "name",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "description",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "enum IDocumentSignature.SignatureStatus",
                name: "status",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "signatures",
                type: "bytes",
              },
            ],
            internalType: "struct IDocumentSignature.Party[]",
            name: "parties",
            type: "tuple[]",
          },
          {
            internalType: "enum IDocumentSignature.DocumentState",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "signatureStart",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "signatureEnd",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "documentId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct IDocumentSignature.DocumentDetialsWithSigature",
        name: "documentDetialsWithSigature",
        type: "tuple",
      },
    ],
    name: "processDocumentWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDocumentSignature__factory {
  static readonly abi = _abi;
  static createInterface(): IDocumentSignatureInterface {
    return new utils.Interface(_abi) as IDocumentSignatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDocumentSignature {
    return new Contract(address, _abi, signerOrProvider) as IDocumentSignature;
  }
}

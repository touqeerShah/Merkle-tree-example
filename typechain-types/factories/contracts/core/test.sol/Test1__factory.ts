/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Test1,
  Test1Interface,
} from "../../../../contracts/core/test.sol/Test1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct Test1.Party",
        name: "party",
        type: "tuple",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct Test1.Party",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061032e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631b8550441461003b578063a1ec102a1461006b575b600080fd5b61005560048036038101906100509190610134565b61009b565b604051610062919061018d565b60405180910390f35b610085600480360381019061008091906101cc565b6100f0565b604051610092919061025e565b60405180910390f35b60007fbf8fe748b8333cb628c20338f24645a0d97ec0f0c98ce39ebdd548054189ef4182846040516020016100d2939291906102bb565b60405160208183030381529060405280519060200120905092915050565b36819050919050565b600080fd5b6000819050919050565b610111816100fe565b811461011c57600080fd5b50565b60008135905061012e81610108565b92915050565b6000806040838503121561014b5761014a6100f9565b5b60006101598582860161011f565b925050602061016a8582860161011f565b9150509250929050565b6000819050919050565b61018781610174565b82525050565b60006020820190506101a2600083018461017e565b92915050565b600080fd5b6000604082840312156101c3576101c26101a8565b5b81905092915050565b6000604082840312156101e2576101e16100f9565b5b60006101f0848285016101ad565b91505092915050565b6000610208602084018461011f565b905092915050565b610219816100fe565b82525050565b6040820161023060008301836101f9565b61023d6000850182610210565b5061024b60208301836101f9565b6102586020850182610210565b50505050565b6000604082019050610273600083018461021f565b92915050565b6000819050919050565b61029461028f82610174565b610279565b82525050565b6000819050919050565b6102b56102b0826100fe565b61029a565b82525050565b60006102c78286610283565b6020820191506102d782856102a4565b6020820191506102e782846102a4565b60208201915081905094935050505056fea264697066735822122058df77b74fbd1757309aeca727def9969844e87195e0a61d027f2793a94c438664736f6c63430008110033";

type Test1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Test1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Test1__factory extends ContractFactory {
  constructor(...args: Test1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Test1> {
    return super.deploy(overrides || {}) as Promise<Test1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Test1 {
    return super.attach(address) as Test1;
  }
  override connect(signer: Signer): Test1__factory {
    return super.connect(signer) as Test1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Test1Interface {
    return new utils.Interface(_abi) as Test1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Test1 {
    return new Contract(address, _abi, signerOrProvider) as Test1;
  }
}

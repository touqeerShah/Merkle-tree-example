/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OrcaleUrlProvider,
  OrcaleUrlProviderInterface,
} from "../../../contracts/core/OrcaleUrlProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "UrlChange",
    type: "event",
  },
  {
    inputs: [],
    name: "getURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011f0380380620011f08339818101604052810190620000379190620002cf565b620000576200004b6200007060201b60201c565b6200007860201b60201c565b80600190816200006891906200056b565b505062000652565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a5826200015a565b810181811067ffffffffffffffff82111715620001c757620001c66200016b565b5b80604052505050565b6000620001dc6200013c565b9050620001ea82826200019a565b919050565b600067ffffffffffffffff8211156200020d576200020c6200016b565b5b62000218826200015a565b9050602081019050919050565b60005b838110156200024557808201518184015260208101905062000228565b60008484015250505050565b6000620002686200026284620001ef565b620001d0565b90508281526020810184848401111562000287576200028662000155565b5b6200029484828562000225565b509392505050565b600082601f830112620002b457620002b362000150565b5b8151620002c684826020860162000251565b91505092915050565b600060208284031215620002e857620002e762000146565b5b600082015167ffffffffffffffff8111156200030957620003086200014b565b5b62000317848285016200029c565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037357607f821691505b6020821081036200038957620003886200032b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003f37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003b4565b620003ff8683620003b4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200044c62000446620004408462000417565b62000421565b62000417565b9050919050565b6000819050919050565b62000468836200042b565b62000480620004778262000453565b848454620003c1565b825550505050565b600090565b6200049762000488565b620004a48184846200045d565b505050565b5b81811015620004cc57620004c06000826200048d565b600181019050620004aa565b5050565b601f8211156200051b57620004e5816200038f565b620004f084620003a4565b8101602085101562000500578190505b620005186200050f85620003a4565b830182620004a9565b50505b505050565b600082821c905092915050565b6000620005406000198460080262000520565b1980831691505092915050565b60006200055b83836200052d565b9150826002028217905092915050565b620005768262000320565b67ffffffffffffffff8111156200059257620005916200016b565b5b6200059e82546200035a565b620005ab828285620004d0565b600060209050601f831160018114620005e35760008415620005ce578287015190505b620005da85826200054d565b8655506200064a565b601f198416620005f3866200038f565b60005b828110156200061d57848901518255600182019150602085019450602081019050620005f6565b868310156200063d578489015162000639601f8916826200052d565b8355505b6001600288020188555050505b505050505050565b610b8e80620006626000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063252498a21461005c57806338bcdc1c14610078578063715018a6146100965780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b6100766004803603810190610071919061052e565b6100da565b005b610080610138565b60405161008d91906105f6565b60405180910390f35b61009e6101ca565b005b6100a86101de565b6040516100b59190610659565b60405180910390f35b6100d860048036038101906100d391906106a0565b610207565b005b6100e261028a565b80600190816100f191906108e3565b5060016040516101019190610a43565b60405180910390207fbe34056c4ee639225e1152fb48a471a199fa09b5bbb943ca1aaeafd00125099660405160405180910390a250565b606060018054610147906106fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610173906106fc565b80156101c05780601f10610195576101008083540402835291602001916101c0565b820191906000526020600020905b8154815290600101906020018083116101a357829003601f168201915b5050505050905090565b6101d261028a565b6101dc6000610308565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020f61028a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361027e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027590610acc565b60405180910390fd5b61028781610308565b50565b6102926103cc565b73ffffffffffffffffffffffffffffffffffffffff166102b06101de565b73ffffffffffffffffffffffffffffffffffffffff1614610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd90610b38565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61043b826103f2565b810181811067ffffffffffffffff8211171561045a57610459610403565b5b80604052505050565b600061046d6103d4565b90506104798282610432565b919050565b600067ffffffffffffffff82111561049957610498610403565b5b6104a2826103f2565b9050602081019050919050565b82818337600083830152505050565b60006104d16104cc8461047e565b610463565b9050828152602081018484840111156104ed576104ec6103ed565b5b6104f88482856104af565b509392505050565b600082601f830112610515576105146103e8565b5b81356105258482602086016104be565b91505092915050565b600060208284031215610544576105436103de565b5b600082013567ffffffffffffffff811115610562576105616103e3565b5b61056e84828501610500565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105b1578082015181840152602081019050610596565b60008484015250505050565b60006105c882610577565b6105d28185610582565b93506105e2818560208601610593565b6105eb816103f2565b840191505092915050565b6000602082019050818103600083015261061081846105bd565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064382610618565b9050919050565b61065381610638565b82525050565b600060208201905061066e600083018461064a565b92915050565b61067d81610638565b811461068857600080fd5b50565b60008135905061069a81610674565b92915050565b6000602082840312156106b6576106b56103de565b5b60006106c48482850161068b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061071457607f821691505b602082108103610727576107266106cd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261078f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610752565b6107998683610752565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006107e06107db6107d6846107b1565b6107bb565b6107b1565b9050919050565b6000819050919050565b6107fa836107c5565b61080e610806826107e7565b84845461075f565b825550505050565b600090565b610823610816565b61082e8184846107f1565b505050565b5b818110156108525761084760008261081b565b600181019050610834565b5050565b601f821115610897576108688161072d565b61087184610742565b81016020851015610880578190505b61089461088c85610742565b830182610833565b50505b505050565b600082821c905092915050565b60006108ba6000198460080261089c565b1980831691505092915050565b60006108d383836108a9565b9150826002028217905092915050565b6108ec82610577565b67ffffffffffffffff81111561090557610904610403565b5b61090f82546106fc565b61091a828285610856565b600060209050601f83116001811461094d576000841561093b578287015190505b61094585826108c7565b8655506109ad565b601f19841661095b8661072d565b60005b828110156109835784890151825560018201915060208501945060208101905061095e565b868310156109a0578489015161099c601f8916826108a9565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b600081546109cd816106fc565b6109d781866109b5565b945060018216600081146109f25760018114610a0757610a3a565b60ff1983168652811515820286019350610a3a565b610a108561072d565b60005b83811015610a3257815481890152600182019150602081019050610a13565b838801955050505b50505092915050565b6000610a4f82846109c0565b915081905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ab6602683610582565b9150610ac182610a5a565b604082019050919050565b60006020820190508181036000830152610ae581610aa9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b22602083610582565b9150610b2d82610aec565b602082019050919050565b60006020820190508181036000830152610b5181610b15565b905091905056fea26469706673582212208e70cadd65ab469566799403be59091b4827ffa3d566305130cc5e0714df25b564736f6c63430008110033";

type OrcaleUrlProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrcaleUrlProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrcaleUrlProvider__factory extends ContractFactory {
  constructor(...args: OrcaleUrlProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _url: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrcaleUrlProvider> {
    return super.deploy(_url, overrides || {}) as Promise<OrcaleUrlProvider>;
  }
  override getDeployTransaction(
    _url: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_url, overrides || {});
  }
  override attach(address: string): OrcaleUrlProvider {
    return super.attach(address) as OrcaleUrlProvider;
  }
  override connect(signer: Signer): OrcaleUrlProvider__factory {
    return super.connect(signer) as OrcaleUrlProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrcaleUrlProviderInterface {
    return new utils.Interface(_abi) as OrcaleUrlProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrcaleUrlProvider {
    return new Contract(address, _abi, signerOrProvider) as OrcaleUrlProvider;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TKNFTMarketplace,
  TKNFTMarketplaceInterface,
} from "../../../../contracts/core/Marketplace.sol/TKNFTMarketplace";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405267016345785d8a000060015534801561001c57600080fd5b5061046f8061002c6000396000f3fe60806040526004361061003f5760003560e01c80634f64b2be1461004457806396e494e81461008157806398d5fdca146100be578063efef39a1146100e9575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906102d3565b610105565b6040516100789190610341565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a391906102d3565b610138565b6040516100b59190610377565b60405180910390f35b3480156100ca57600080fd5b506100d36101b2565b6040516100e091906103a1565b60405180910390f35b61010360048036038101906100fe91906102d3565b6101bc565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101a857600190506101ad565b600090505b919050565b6000600154905090565b6001543414610200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f790610419565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550803373ffffffffffffffffffffffffffffffffffffffff167f2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f63260405160405180910390a350565b600080fd5b6000819050919050565b6102b08161029d565b81146102bb57600080fd5b50565b6000813590506102cd816102a7565b92915050565b6000602082840312156102e9576102e8610298565b5b60006102f7848285016102be565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061032b82610300565b9050919050565b61033b81610320565b82525050565b60006020820190506103566000830184610332565b92915050565b60008115159050919050565b6103718161035c565b82525050565b600060208201905061038c6000830184610368565b92915050565b61039b8161029d565b82525050565b60006020820190506103b66000830184610392565b92915050565b600082825260208201905092915050565b7f54686973204e465420636f73747320302e312065746865720000000000000000600082015250565b60006104036018836103bc565b915061040e826103cd565b602082019050919050565b60006020820190508181036000830152610432816103f6565b905091905056fea2646970667358221220d53de6919eb1d6391f9673cc67765703e415d6ab498222255b896fad84dc4bdc64736f6c63430008110033";

type TKNFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TKNFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TKNFTMarketplace__factory extends ContractFactory {
  constructor(...args: TKNFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TKNFTMarketplace> {
    return super.deploy(overrides || {}) as Promise<TKNFTMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TKNFTMarketplace {
    return super.attach(address) as TKNFTMarketplace;
  }
  override connect(signer: Signer): TKNFTMarketplace__factory {
    return super.connect(signer) as TKNFTMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TKNFTMarketplaceInterface {
    return new utils.Interface(_abi) as TKNFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TKNFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as TKNFTMarketplace;
  }
}
